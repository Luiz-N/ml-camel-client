<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd">

  <!-- A simple bean that sets the body of the input message to a block of XML with the current time in it -->
  <bean id="currentTimeXmlGenerator" class="com.marklogic.camel.sample.CurrentTimeXmlGenerator" />

  <!-- Custom class for processing CSV text -->
  <bean id="csvProcessor" class="com.marklogic.camel.sample.CsvProcessor" />

  <bean id="xccTemplate" class="com.marklogic.xccutil.template.XccTemplate">
    <constructor-arg
      value="xcc://#{systemProperties['mlUsername']}:#{systemProperties['mlPassword']}@#{systemProperties['mlHost']}:#{systemProperties['mlXdbcPort']}" />
  </bean>

  <camelContext id="camel" xmlns="http://camel.apache.org/schema/spring">

    <!-- Reads files from the given directory and then ingests them using mlcp -->
    <route>
      <from uri="file://inbox/mlcp" />
      <to
        uri="mlcp:{{mlHost}}:{{mlXdbcPort}}?username={{mlUsername}}&amp;password={{mlPassword}}&amp;output_collections=mlcp-test&amp;xml_repair_level=full" />
    </route>

    <!-- Reads files from the given directory, splits them, and then in parallel runs them through a custom Java class for 
      processing, generates XML via Velocity, and then ingests the XML using XCC -->
    <route>
      <from uri="file://inbox/csv" />
      <split streaming="true" parallelProcessing="true">
        <tokenize token="\n" group="1" />
        <unmarshal>
          <csv delimiter="," />
        </unmarshal>
        <to uri="bean:csvProcessor"/>
        <to uri="velocity:velocity/to-person.vm?contentCache=false"/>
        <to uri="ml-xcc://{{mlUsername}}:{{mlPassword}}@{{mlHost}}:{{mlXdbcPort}}?format=xml&amp;collections=person,camel-test&amp;permissions=rest-reader,read,rest-writer,update" />
      </split>
      

    </route>

    <!-- This route shows how to use the Camel Timer component to initiate a flow, which then involves the CurrentTimeXmlGenerator 
      setting the input message to a block of XML, which is then written to the inboxUri that the above route reads from (using 
      the ID of the current message as the file name), which means each XML block will be ingested as a new document into MarkLogic. 
      See http://camel.apache.org/timer.html for more info on the timer, http://camel.apache.org/bean.html for more info on a Bean 
      endpoint, and http://camel.apache.org/file2.html for more info on writing a file <route> <from uri="timer:sampleTime?fixedRate=true&amp;period=5000" 
      /> <to uri="bean:currentTimeXmlGenerator" /> <to uri="{{inboxUri}}?fileName=${id}.xml" /> </route> -->

  </camelContext>

</beans>